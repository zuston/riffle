name: ReleaseBot

on:
  push:
    branches:
      - "master"
    tags:
      - "v*.*.*"
  pull_request:
    types: [labeled, synchronize]

concurrency:
  group: pr-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  build-and-upload:
    if: github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'build-artifacts')
    name: Build and Upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: macos-arm64
            os: macos-latest
            build_command: cargo build --release --bin riffle-ctl
            artifact_path: target/release/riffle-ctl
            docker_compose: ""
          - name: linux-arm64-anolisos8
            os: ubuntu-22.04-arm
            build_command: docker compose -f dev/anolisos8/arm64/docker-compose.yml up
            artifact_path: target-docker/release/riffle-server
            docker_compose: dev/anolisos8/arm64/docker-compose.yml
          - name: linux-amd64-centos7
            os: ubuntu-22.04
            build_command: docker compose -f dev/centos7/amd64/docker-compose.yml up
            artifact_path: target-docker/release/riffle-server
            docker_compose: dev/centos7/amd64/docker-compose.yml
          - name: linux-amd64-anolisos8
            os: ubuntu-22.04
            build_command: docker compose -f dev/anolisos8/amd64/docker-compose.yml up
            artifact_path: target-docker/release/riffle-server
            docker_compose: dev/anolisos8/amd64/docker-compose.yml

    steps:
      - name: Remove unnecessary files (Linux only)
        if: ${{ matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-22.04-arm' }}
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - uses: actions/checkout@v4

      - name: Sanitize ref name
        id: vars
        run: |
          RAW_NAME="${{ github.ref_name || github.head_ref }}"
          SAFE_NAME="${RAW_NAME//\//-}"
          echo "name=$SAFE_NAME" >> $GITHUB_OUTPUT

      - name: Set up cache for Cargo (macOS only)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-cache-${{ runner.os }}-

      - name: Install proto3 (macOS only)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install protobuf
          protoc --version

      - name: Set up Rust (macOS only)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Build
        run: ${{ matrix.build_command }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: riffle-${{ matrix.name }}-${{ steps.vars.outputs.name }}
          path: ${{ matrix.artifact_path }}

      - name: Upload binaries to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_path }}
          asset_name: riffle-${{ matrix.name }}-${{ steps.vars.outputs.name }}
          tag: ${{ github.ref }}
